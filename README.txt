This program is a letter counter that analyzes how many times each letter is used in a set of input files listed to it by a "subreddits" file.
The analyzer was built as part of an inquiry into whether and why different online communities exhibit different patterns in letter frequency.
This program's sister project is a program which downloads the top 100 posts from each Subreddit in a text file, "subreddits", alongside all of the comments. The sister project can be found at https://github.com/Proprixia/redditCharFreqDownloader.
The program is licensed under the GNU Public License version 3, or a later version at your option.

To operate the program, first compile it using gcc with the command "gcc -Wall -Werror main.c -l json-c -o Analyzer".
You will need to edit the "config.json" file with two arguments: "subredditsFile", which refers to the path of the text file with the list of subreddits you wish to parse, and "downloadsDirectory", which refers to the directory in which the Subreddit text downloads are located.
By default, the values of these files are "./subreddits" and "./Out", respecitvely.
Before running the program, import directory containing files consisting of all of the text of a Subreddit as generated by the downloader program. Each file should be named exactly like the subreddit from which its contents were taken. Name the directory such that it matches the downloadsDirectory listed in the config.json file.
In addition, create a "subreddits" text file (case sensitive) consisting of all of the subreddits you wish to analyze that are in the Downloads folder. At the moment, the presence of a subreddit in the text file but not the directory will cause a crash. (This will be fixed soon).
Once the "downloadsDirectory" folder and "subredditsFile" text file are complete, you may execute the program and enjoy its results, which will be found in a "singleLetterOutputs.csv" file and a "letterPairOutputs.csv" file in the execution directory, containing data on individual letter frequency and letter pair frequency, respectively.

If you have any questions, comments, or concerns, please contact the developer at Proprixia on GitHub.

In the future, I may add advanced configuration options, better feedback, more advanced statistics, and immunity to certain errors.
